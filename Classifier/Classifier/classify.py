import collectionsimport osimport parsingham = collections.Counter()spam = collections.Counter()spam_rating = collections.Counter()ham_rating = collections.Counter()spam_mails = []def getAllFiles(top_directory):    files = []    for directory in os.listdir(top_directory):        if os.path.isfile(str(top_directory + directory)):            files.append(str(top_directory + directory))        else:            files = files + (getAllFiles(str(top_directory + directory + "/")))    return filesdef train(ham_path, spam_path):    ham_files = getAllFiles(ham_path)    spam_files = getAllFiles(spam_path)    for file in ham_files:        try:            with open(file) as f:                for line in f:                    for word in line.split():                        ham.update({word.lower()})        except:            continue    for file2 in spam_files:        try:            with open(file2) as f2:                spam_mails.append(f2.readline())                for line2 in f2:                    for word2 in line2.split():                        spam.update({word2.lower()})        except:            continue    for word in spam:        s = spam[word] / (spam[word] + ham[word])        spam_rating.update({word: s})        ham_rating.update({word: 1 - s})def classify(file):    h=0    s=0    with open(file) as f:        try:            mail_from = f.readline()            if mail_from in spam_mails:                return False            for line in f:                for word in line.split():                    h+=ham_rating[word]                    s+=spam_rating[word]        except:                print("Corrupted File")                i= 1+s-h    if(i<0):        return True    else:        return Falsedef predict (dir,label):    total =0    right=0    test_files = getAllFiles(dir)    print('next files should be ',label)    for test in test_files:        total += 1        if(classify(test)):            print('The file is : ham')            if(label=='ham'):                right+=1        if(not classify(test)):            print('The file is : spam')            if (label == 'spam'):                right += 1            print('Classifier got ',right,' files correct out of ',total)ham_path = './output/training_data/ham/'spam_path = './output/training_data/spam/'parsing.parse_dir('./training_data/ham/',ham_path)parsing.parse_dir('./training_data/spam/',spam_path,True)print('Training Classifier please hold ....')train(ham_path,spam_path)print('classifier Trained successfully.')predict('./test_data/ham/','ham')predict('./test_data/spam/','spam')